openapi: 3.0.0
info:
  title: Dokumentasi API
  description: Dokumentasi API Proyek 3
  version: 1.0.0
servers:
  - url: https://asia-southeast2-awangga.cloudfunctions.net/idbiz

paths:
  /auth/register/admin:
    post:
      tags:
        - Auth Admin
      summary: Register akun admin baru
      description: Endpoint untuk mendaftarkan akun admin baru
      operationId: registerAdmin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "John Doe"
                phoneNumber:
                  type: string
                  pattern: "^62\\d{9,15}$"
                  example: "6281234567890"
                email:
                  type: string
                  format: email
                  example: "johndoe@example.com"
                password:
                  type: string
                  format: password
                  example: "securepassword123"
                role:
                  type: string
                  enum: [admin]
                  example: "admin"
      responses:
        "200":
          description: Akun admin berhasil dibuat
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "New user created successfully"
                  name:
                    type: string
                    example: "John Doe"
                  phonenumber:
                    type: string
                    example: "6281234567890"
                  email:
                    type: string
                    example: "johndoe@example.com"
                  team:
                    type: string
                    example: "pd.my.id"
                  scope:
                    type: string
                    example: "dev"
                  jumlahAntrian:
                    type: integer
                    example: 7
                  role:
                    type: string
                    example: "admin"
        "400":
          description: Bad request - Data tidak valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Bad Request"
                  response:
                    type: string
                    example: "Invalid phone number format"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed to insert new user"
                  response:
                    type: string
                    example: "Database error message"

  /auth/login/admin:
    post:
      tags:
        - Auth Admin
      summary: Login akun admin
      description: Endpoint untuk login akun admin
      operationId: loginAdmin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "johndoe@example.com"
                password:
                  type: string
                  format: password
                  example: "securepassword123"
      responses:
        "200":
          description: Login berhasil
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Login successful"
                  name:
                    type: string
                    example: "John Doe"
                  email:
                    type: string
                    example: "johndoe@example.com"
                  phone:
                    type: string
                    example: "6281234567890"
                  team:
                    type: string
                    example: "pd.my.id"
                  scope:
                    type: string
                    example: "dev"
                  antrian:
                    type: integer
                    example: 7
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        "400":
          description: Bad request - Data tidak valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Invalid Request"
                  response:
                    type: string
                    example: "Request body is missing or malformed"
        "401":
          description: Unauthorized - Kredensial tidak valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Invalid Credentials"
                  response:
                    type: string
                    example: "Password mismatch"
        "404":
          description: User tidak ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Error: User not found"
                  response:
                    type: string
                    example: "No user with the provided email"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Database Error"
                  response:
                    type: string
                    example: "Database connection issue"
  
  /auth/register:
    post:
      tags:
        - Auth User
      summary: Register akun user baru
      description: Endpoint untuk mendaftarkan akun user baru
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                phonenumber:
                  type: string
                  pattern: '^62\\d{9,15}$'
                  example: 6281234567890
                email:
                  type: string
                  format: email
                  example: john.doe@example.com
                password:
                  type: string
                  format: password
                  example: mySecurePassword123
                role:
                  type: string
                  enum: [user, admin]
                  example: user
              required:
                - name
                - phonenumber
                - email
                - password
      responses:
        '200':
          description: User successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: New user created successfully
                  name:
                    type: string
                    example: John Doe
                  phonenumber:
                    type: string
                    example: 6281234567890
                  email:
                    type: string
                    example: john.doe@example.com
                  team:
                    type: string
                    example: pd.my.id
                  scope:
                    type: string
                    example: dev
                  jumlahAntrian:
                    type: integer
                    example: 7
                  role:
                    type: string
                    example: user
        '400':
          description: Invalid request or phone number format
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Bad Request
                  response:
                    type: string
                    example: Invalid phone number format
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Failed to hash password
                  response:
                    type: string
                    example: Hashing algorithm error
  /auth/login/form:
    post:
      tags:
        - Auth User
      summary: Login User
      description: Endpoint untuk login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "john.smoke@example.com"
                  description: "The email address of the user."
                password:
                  type: string
                  format: password
                  example: "test123"
                  description: "The password of the user."
              required:
                - email
                - password
      responses:
        '200':
          description: Login successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Login successful"
                  name:
                    type: string
                    example: "John Doe"
                  email:
                    type: string
                    example: "user@example.com"
                  phone:
                    type: string
                    example: "+1234567890"
                  team:
                    type: string
                    example: "Engineering"
                  scope:
                    type: string
                    example: "admin"
                  antrian:
                    type: integer
                    example: 5
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Invalid Request"
                  response:
                    type: string
                    example: "Invalid JSON payload."
        '404':
          description: User not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Error: User not found"
                  response:
                    type: string
                    example: "No user with the provided email."
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Invalid Credentials"
                  response:
                    type: string
                    example: "Password mismatch."
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Database Error"
                  response:
                    type: string
                    example: "An unexpected error occurred."
  /auth/users/all:
    get:
      tags:
        - Auth User
      summary: Get All Akun User
      description: Endpoint untuk mengambil semua data user
      responses:
        '200':
          description: Successfully retrieved user data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Data berhasil diambil
                  user:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "64b3fbc2e4b0a72b640e9a5e"
                        name:
                          type: string
                          example: John Doe
                        phonenumber:
                          type: string
                          example: 6281234567890
                        email:
                          type: string
                          example: john.doe@example.com
                        role:
                          type: string
                          example: customer
                        created_at:
                          type: string
                          format: date-time
                          example: 2024-01-24T12:34:56Z
        '404':
          description: Failed to fetch user data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Gagal mengambil data user
                  response:
                    type: string
                    example: connection timeout
  /update/user:
    put:
      tags:
        - Auth User
      summary: Memperbarui data pengguna berdasarkan ID
      description: Endpoint untuk memperbarui data pengguna berdasarkan ID yang diberikan.
      operationId: updateUser
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: ID pengguna yang ingin diperbarui.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "John Doe"
                phonenumber:
                  type: string
                  example: "6281234567890"
                email:
                  type: string
                  example: "johndoe@example.com"
                team:
                  type: string
                  example: "Engineering"
                scope:
                  type: string
                  example: "admin"
                jumlahAntrian:
                  type: integer
                  example: 5
                role:
                  type: string
                  example: "user"
                password:
                  type: string
                  example: "securepassword123"
      responses:
        "200":
          description: Pengguna berhasil diperbarui
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  response:
                    type: string
                    example: User berhasil diperbarui
        "400":
          description: Data tidak valid atau kurang lengkap
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Error
                  response:
                    type: string
                    example: Data pengguna tidak valid
        "403":
          description: Token tidak valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Token Tidak Valid
                  response:
                    type: string
                    example: Token tidak valid
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Error
                  response:
                    type: string
                    example: Terjadi kesalahan pada server


  /insert/portofolio:
    post:
      tags:
        - Portofolio
      summary: Membuat portofolio baru
      description: Endpoint untuk menyimpan portofolio desain baru ke dalam sistem.
      operationId: createPortofolio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nama_desain:
                  type: string
                  example: "Logo Perusahaan XYZ"
                deskripsi:
                  type: string
                  example: "Desain logo modern untuk perusahaan XYZ."
                gambar:
                  type: string
                  example: "https://example.com/uploads/logo_xyz.png"
                kategori:
                  type: string
                  example: "Logo Design"
                harga:
                  type: string
                  example: "500000"
      responses:
        "200":
          description: Portofolio berhasil disimpan
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  response:
                    type: string
                    example: Portofolio berhasil disimpan
        "400":
          description: Bad request - Data tidak valid atau kurang lengkap
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Error
                  response:
                    type: string
                    example: Data portofolio tidak valid
        "403":
          description: Token tidak valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Token Tidak Valid
                  response:
                    type: string
                    example: Token tidak valid
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Error
                  response:
                    type: string
                    example: Terjadi kesalahan pada server
  /portofolio:
    get:
      tags:
        - Portofolio
      summary: Mendapatkan semua portofolio
      description: Mengembalikan daftar semua portofolio yang ada dalam sistem.
      operationId: getAllPortofolio
      responses:
        "200":
          description: Daftar portofolio berhasil diambil
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "64b3fbc2e4b0a72b640e9a5e"
                        nama_desain:
                          type: string
                          example: "Logo Perusahaan XYZ"
                        deskripsi:
                          type: string
                          example: "Desain logo modern untuk perusahaan XYZ."
                        gambar:
                          type: string
                          example: "https://example.com/uploads/logo_xyz.png"
                        kategori:
                          type: string
                          example: "Logo Design"
                        harga:
                          type: string
                          example: "500000"
        "400":
          description: Terjadi kesalahan saat mengambil data
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Error
                  response:
                    type: string
                    example: Terjadi kesalahan saat mengambil portofolio
  /portofolio/:
    get:
      tags:
        - Portofolio
      summary: Mendapatkan portofolio berdasarkan ID
      description: Mengembalikan detail portofolio berdasarkan ID yang diberikan.
      operationId: getPortofolioByID
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: ID portofolio yang ingin diambil.
      responses:
        "200":
          description: Portofolio berhasil ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "64b3fbc2e4b0a72b640e9a5e"
                      nama_desain:
                        type: string
                        example: "Logo Perusahaan XYZ"
                      deskripsi:
                        type: string
                        example: "Desain logo modern untuk perusahaan XYZ."
                      gambar:
                        type: string
                        example: "https://example.com/uploads/logo_xyz.png"
                      kategori:
                        type: string
                        example: "Logo Design"
                      harga:
                        type: string
                        example: "500000"
        "400":
          description: ID tidak valid atau tidak diberikan
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Error
                  response:
                    type: string
                    example: ID tidak valid
        "404":
          description: Portofolio tidak ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Error
                  response:
                    type: string
                    example: Portofolio tidak ditemukan
  /update/portofolio:
    put:
      tags:
        - Portofolio
      summary: Memperbarui portofolio berdasarkan ID
      description: Endpoint untuk memperbarui portofolio berdasarkan ID yang diberikan.
      operationId: updatePortofolio
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: ID portofolio yang ingin diperbarui.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nama_desain:
                  type: string
                  example: "Logo Perusahaan XYZ"
                deskripsi:
                  type: string
                  example: "Desain logo modern untuk perusahaan XYZ."
                gambar:
                  type: string
                  example: "https://example.com/uploads/logo_xyz.png"
                kategori:
                  type: string
                  example: "Logo Design"
                harga:
                  type: string
                  example: "500000"
      responses:
        "200":
          description: Portofolio berhasil diperbarui
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  response:
                    type: string
                    example: Portofolio berhasil diperbarui
        "400":
          description: Data tidak valid atau kurang lengkap
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Error
                  response:
                    type: string
                    example: Data portofolio tidak valid
        "403":
          description: Token tidak valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Token Tidak Valid
                  response:
                    type: string
                    example: Token tidak valid
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Error
                  response:
                    type: string
                    example: Terjadi kesalahan pada server
  /delete/portofolio:
    delete:
      tags:
        - Portofolio
      summary: Menghapus portofolio berdasarkan ID
      description: Endpoint untuk menghapus portofolio berdasarkan ID yang diberikan.
      operationId: deletePortofolio
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: ID portofolio yang ingin dihapus.
      responses:
        "200":
          description: Portofolio berhasil dihapus
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  response:
                    type: string
                    example: Portofolio berhasil dihapus
        "400":
          description: ID tidak valid atau tidak diberikan
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Error
                  response:
                    type: string
                    example: ID tidak valid
        "403":
          description: Token tidak valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Token Tidak Valid
                  response:
                    type: string
                    example: Token tidak valid
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Error
                  response:
                    type: string
                    example: Terjadi kesalahan pada server


  /insert/pembayaran:
    post:
      tags:
        - Transaksi
      summary: Insert transaksi pembayaran
      description: Endpoint untuk melakukan transaksi pembayaran dengan mengunggah bukti pembayaran.
      operationId: insertPembayaran
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  example: "64b3fbc2e4b0a72b640e9a5e"
                nama_pemesan:
                  type: string
                  example: "John Doe"
                desain_id:
                  type: string
                  example: "desain123"
                nama_desain:
                  type: string
                  example: "Desain Logo ABC"
                harga:
                  type: string
                  example: "500000"
                status_pesanan:
                  type: string
                  example: "Pending"
                catatan_pesanan:
                  type: string
                  example: "Mohon revisi jika perlu"
                bukti_pembayaran:
                  type: string
                  format: binary
      responses:
        "200":
          description: Transaksi berhasil dibuat
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Success"
                  response:
                    type: string
                    example: "Transaction created successfully"
                  location:
                    type: string
                    example: "https://github.com/uploads/bukti_pembayaran.jpg"
                  info:
                    type: string
                    example: "{...transaksi details...}"
        "400":
          description: Bad request - Data tidak valid atau kurang lengkap
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Error"
                  response:
                    type: string
                    example: "Missing required fields"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Error"
                  response:
                    type: string
                    example: "Failed to save transaction"
  /transaksi/id:
    get:
      tags:
        - Transaksi
      summary: Ambil detail transaksi berdasarkan ID
      description: Endpoint untuk mengambil data transaksi berdasarkan ID yang diberikan.
      operationId: getTransaksiByID
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: ID transaksi yang ingin diambil.
      responses:
        "200":
          description: Data transaksi ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "64b3fbc2e4b0a72b640e9a5e"
                      userID:
                        type: string
                        example: "user123"
                      namaPemesan:
                        type: string
                        example: "John Doe"
                      desainID:
                        type: string
                        example: "desain456"
                      namaDesain:
                        type: string
                        example: "Desain Logo XYZ"
                      harga:
                        type: string
                        example: "500000"
                      statusPesanan:
                        type: string
                        example: "Completed"
                      catatanPesanan:
                        type: string
                        example: "Pesanan telah selesai dengan baik"
                      buktiPembayaran:
                        type: string
                        example: "https://example.com/uploads/payment_proof.jpg"
                      tanggalPesanan:
                        type: string
                        format: date-time
                        example: "2024-02-01T12:34:56Z"
        "400":
          description: Bad request - ID tidak valid atau tidak diberikan
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Error"
                  response:
                    type: string
                    example: "Pesanan ID harus disertakan"
        "404":
          description: Data transaksi tidak ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Error"
                  response:
                    type: string
                    example: "Pesanan tidak ditemukan"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Error"
                  response:
                    type: string
                    example: "Terjadi kesalahan: Database error"
  /transaksi/status:
    get:
      tags:
        - Transaksi
      summary: Mendapatkan transaksi berdasarkan status
      description: Mengembalikan daftar transaksi yang memiliki status tertentu.
      operationId: getTransaksiByStatus
      parameters:
        - name: status
          in: query
          required: true
          description: Status pesanan yang ingin dicari
          schema:
            type: string
      responses:
        "200":
          description: Daftar transaksi berhasil diambil
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "64b3fbc2e4b0a72b640e9a5e"
                      userID:
                        type: string
                        example: "user123"
                      namaPemesan:
                        type: string
                        example: "John Doe"
                      desainID:
                        type: string
                        example: "desain456"
                      namaDesain:
                        type: string
                        example: "Desain Logo XYZ"
                      harga:
                        type: string
                        example: "500000"
                      statusPesanan:
                        type: string
                        example: "Selesai"
                      catatanPesanan:
                        type: string
                        example: "Pesanan telah selesai dengan baik"
                      buktiPembayaran:
                        type: string
                        example: "https://example.com/uploads/payment_proof.jpg"
                      tanggalPesanan:
                        type: string
                        format: date-time
                        example: "2024-02-01T12:34:56Z"
        "400":
          description: Status pesanan harus disertakan
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Error
                  response:
                    type: string
                    example: Status pesanan harus disertakan
        "403":
          description: Token tidak valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Token Tidak Valid
                  response:
                    type: string
                    example: Token tidak valid
        "404":
          description: Tidak ada transaksi dengan status tersebut
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Error
                  response:
                    type: string
                    example: Tidak ada transaksi dengan status tersebut
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Error
                  response:
                    type: string
                    example: Database error
  /data/transaksi:
    get:
      tags:
        - Transaksi
      summary: Mendapatkan semua transaksi
      description: Mengembalikan daftar semua transaksi yang ada dalam sistem.
      operationId: getAllTransaksi
      responses:
        "200":
          description: Daftar transaksi berhasil diambil
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "64b3fbc2e4b0a72b640e9a5e"
                        jumlah:
                          type: number
                          format: double
                          example: 150000.00
                        tanggal:
                          type: string
                          format: date-time
                          example: 2024-01-24T12:34:56Z
                        status_pesanan:
                          type: string
                          example: "selesai"
        "400":
          description: Terjadi kesalahan saat mengambil data
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Error
                  response:
                    type: string
                    example: Terjadi kesalahan saat mengambil transaksi
  /update/transaksi:
    put:
      tags:
        - Transaksi
      summary: Memperbarui transaksi berdasarkan ID
      description: Endpoint untuk memperbarui transaksi berdasarkan ID yang diberikan.
      operationId: updateTransaksi
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: ID transaksi yang ingin diperbarui.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  example: "user123"
                nama_pemesan:
                  type: string
                  example: "John Doe"
                desain_id:
                  type: string
                  example: "desain456"
                nama_desain:
                  type: string
                  example: "Desain Logo XYZ"
                harga:
                  type: string
                  example: "500000"
                status_pesanan:
                  type: string
                  example: "Completed"
                catatan_pesanan:
                  type: string
                  example: "Pesanan telah selesai dengan baik"
                bukti_pembayaran:
                  type: string
                  example: "https://example.com/uploads/payment_proof.jpg"
                tanggal_pesanan:
                  type: string
                  format: date-time
                  example: "2024-02-01T12:34:56Z"
      responses:
        "200":
          description: Transaksi berhasil diperbarui
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  response:
                    type: string
                    example: Transaksi berhasil diperbarui
        "400":
          description: Data tidak valid atau kurang lengkap
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Error
                  response:
                    type: string
                    example: ID tidak valid atau data tidak lengkap
        "403":
          description: Token tidak valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Token Tidak Valid
                  response:
                    type: string
                    example: Token tidak valid
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Error
                  response:
                    type: string
                    example: Database error
  /delete/transaksi:
    delete:
      tags:
        - Transaksi
      summary: Menghapus transaksi berdasarkan ID
      description: Endpoint untuk menghapus transaksi berdasarkan ID yang diberikan.
      operationId: deleteTransaksi
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: ID transaksi yang ingin dihapus.
      responses:
        "200":
          description: Transaksi berhasil dihapus
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  response:
                    type: string
                    example: Transaksi berhasil dihapus
        "400":
          description: ID tidak valid atau tidak diberikan
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Error
                  response:
                    type: string
                    example: ID tidak valid
        "403":
          description: Token tidak valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Token Tidak Valid
                  response:
                    type: string
                    example: Token tidak valid
        "500":
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Error
                  response:
                    type: string
                    example: Database error




components:
  securitySchemes:
    token:
      type: apiKey
      name: login
      in: header

security:
  - token: []


# openapi: 3.0.3
# info:
#   title: Geo API
#   description: API untuk mendapatkan data jalan dan wilayah berdasarkan koordinat.
#   version: 1.0.0
# servers:
#   - url: https://asia-southeast2-awangga.cloudfunctions.net
# paths:
#   /idbiz/geo/roads:
#     post:
#       tags:
#         - roads
#       summary: Get roads data around a point
#       description: Mengembalikan data jalan di sekitar titik koordinat yang diberikan dengan jarak maksimum tertentu.
#       security:
#         - token: []
#       requestBody:
#         required: true
#         content:
#           application/json:
#             schema:
#               type: object
#               properties:
#                 long:
#                   type: number
#                   format: float
#                   description: Longitude coordinate
#                   example: 107.5758500037501
#                 lat:
#                   type: number
#                   format: float
#                   description: Latitude coordinate
#                   example: -6.874720427234501
#                 max_distance:
#                   type: integer
#                   description: Maximum distance (in meters) to search for roads
#                   example: 100
#       responses:
#         "200":
#           description: List of roads around the given point
#           content:
#             application/json:
#               schema:
#                 type: array
#                 items:
#                   $ref: "#/components/schemas/Road"
#         "400":
#           description: Invalid request
#   /idbiz/geo/region:
#     post:
#       tags:
#         - region
#       summary: Get region data around a point
#       description: Mengembalikan data wilayah di sekitar titik koordinat yang diberikan.
#       security:
#         - token: []
#       requestBody:
#         required: true
#         content:
#           application/json:
#             schema:
#               type: object
#               properties:
#                 long:
#                   type: number
#                   format: float
#                   description: Longitude coordinate
#                   example: 107.5758500037501
#                 lat:
#                   type: number
#                   format: float
#                   description: Latitude coordinate
#                   example: -6.874720427234501
#       responses:
#         "200":
#           description: Region data around the given point
#           content:
#             application/json:
#               schema:
#                 $ref: "#/components/schemas/Region"
#         "400":
#           description: Invalid request
# components:
#   schemas:
#     Road:
#       type: object
#       properties:
#         id:
#           type: string
#           description: Unique identifier for the road
#           example: "12345"
#         name:
#           type: string
#           description: Name of the road
#           example: "Jalan Raya Bandung"
#         length:
#           type: number
#           description: Length of the road in meters
#           example: 1200
#         geometry:
#           type: object
#           properties:
#             type:
#               type: string
#               example: "LineString"
#             coordinates:
#               type: array
#               items:
#                 type: array
#                 items:
#                   type: number
#                   format: float
#                   description: Coordinates of the road
#                   example: [107.575, -6.874]
#     Region:
#       type: object
#       properties:
#         id:
#           type: string
#           description: Unique identifier for the region
#           example: "67890"
#         name:
#           type: string
#           description: Name of the region
#           example: "Bandung City"
#         type:
#           type: string
#           description: Type of region (e.g., city, district)
#           example: "city"
#         boundary:
#           type: object
#           properties:
#             type:
#               type: string
#               example: "Polygon"
#             coordinates:
#               type: array
#               items:
#                 type: array
#                 items:
#                   type: number
#                   format: float
#                   description: Coordinates of the region boundary
#                   example: [107.575, -6.874]