# openapi: 3.0.3
# info:
#   title: Geo API
#   description: API untuk mendapatkan data jalan dan wilayah berdasarkan koordinat.
#   version: 1.0.0
# servers:
#   - url: https://asia-southeast2-awangga.cloudfunctions.net
# paths:
#   /idbiz/geo/roads:
#     post:
#       tags:
#         - roads
#       summary: Get roads data around a point
#       description: Mengembalikan data jalan di sekitar titik koordinat yang diberikan dengan jarak maksimum tertentu.
#       security:
#         - token: []
#       requestBody:
#         required: true
#         content:
#           application/json:
#             schema:
#               type: object
#               properties:
#                 long:
#                   type: number
#                   format: float
#                   description: Longitude coordinate
#                   example: 107.5758500037501
#                 lat:
#                   type: number
#                   format: float
#                   description: Latitude coordinate
#                   example: -6.874720427234501
#                 max_distance:
#                   type: integer
#                   description: Maximum distance (in meters) to search for roads
#                   example: 100
#       responses:
#         "200":
#           description: List of roads around the given point
#           content:
#             application/json:
#               schema:
#                 type: array
#                 items:
#                   $ref: "#/components/schemas/Road"
#         "400":
#           description: Invalid request
#   /idbiz/geo/region:
#     post:
#       tags:
#         - region
#       summary: Get region data around a point
#       description: Mengembalikan data wilayah di sekitar titik koordinat yang diberikan.
#       security:
#         - token: []
#       requestBody:
#         required: true
#         content:
#           application/json:
#             schema:
#               type: object
#               properties:
#                 long:
#                   type: number
#                   format: float
#                   description: Longitude coordinate
#                   example: 107.5758500037501
#                 lat:
#                   type: number
#                   format: float
#                   description: Latitude coordinate
#                   example: -6.874720427234501
#       responses:
#         "200":
#           description: Region data around the given point
#           content:
#             application/json:
#               schema:
#                 $ref: "#/components/schemas/Region"
#         "400":
#           description: Invalid request
# components:
#   schemas:
#     Road:
#       type: object
#       properties:
#         id:
#           type: string
#           description: Unique identifier for the road
#           example: "12345"
#         name:
#           type: string
#           description: Name of the road
#           example: "Jalan Raya Bandung"
#         length:
#           type: number
#           description: Length of the road in meters
#           example: 1200
#         geometry:
#           type: object
#           properties:
#             type:
#               type: string
#               example: "LineString"
#             coordinates:
#               type: array
#               items:
#                 type: array
#                 items:
#                   type: number
#                   format: float
#                   description: Coordinates of the road
#                   example: [107.575, -6.874]
#     Region:
#       type: object
#       properties:
#         id:
#           type: string
#           description: Unique identifier for the region
#           example: "67890"
#         name:
#           type: string
#           description: Name of the region
#           example: "Bandung City"
#         type:
#           type: string
#           description: Type of region (e.g., city, district)
#           example: "city"
#         boundary:
#           type: object
#           properties:
#             type:
#               type: string
#               example: "Polygon"
#             coordinates:
#               type: array
#               items:
#                 type: array
#                 items:
#                   type: number
#                   format: float
#                   description: Coordinates of the region boundary
#                   example: [107.575, -6.874]
#   securitySchemes:
#     token:
#       type: apiKey
#       name: login
#       in: header

openapi: 3.0.0
info:
  title: User Registration API
  description: API for registering a new user to the system.
  version: 1.0.0
  servers:
  - url: https://asia-southeast2-awangga.cloudfunctions.net

paths:
  /idbiz/auth/register:
    post:
      summary: Register a new user
      description: Create a new user with the provided details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                phonenumber:
                  type: string
                  pattern: '^62\\d{9,15}$'
                  example: 6281234567890
                email:
                  type: string
                  format: email
                  example: john.doe@example.com
                password:
                  type: string
                  format: password
                  example: mySecurePassword123
                role:
                  type: string
                  enum: [user, admin]
                  example: user
              required:
                - name
                - phonenumber
                - email
                - password
      responses:
        '200':
          description: User successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: New user created successfully
                  name:
                    type: string
                    example: John Doe
                  phonenumber:
                    type: string
                    example: 6281234567890
                  email:
                    type: string
                    example: john.doe@example.com
                  team:
                    type: string
                    example: pd.my.id
                  scope:
                    type: string
                    example: dev
                  jumlahAntrian:
                    type: integer
                    example: 7
                  role:
                    type: string
                    example: user
        '400':
          description: Invalid request or phone number format
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Bad Request
                  response:
                    type: string
                    example: Invalid phone number format
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Failed to hash password
                  response:
                    type: string
                    example: Hashing algorithm error

  /idbiz/auth/login/form:
    post:
      summary: Login a user
      description: Authenticate a user with their email and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: john.doe@example.com
                password:
                  type: string
                  format: password
                  example: mySecurePassword123
              required:
                - email
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Login successful
                  name:
                    type: string
                    example: John Doe
                  email:
                    type: string
                    example: john.doe@example.com
                  phone:
                    type: string
                    example: 6281234567890
                  team:
                    type: string
                    example: pd.my.id
                  scope:
                    type: string
                    example: dev
                  antrian:
                    type: integer
                    example: 7
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '400':
          description: Invalid request payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Invalid Request
                  response:
                    type: string
                    example: Request body could not be decoded
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Invalid Credentials
                  response:
                    type: string
                    example: Password mismatch
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Error: User not found
                  response:
                    type: string
                    example: No user with the provided email
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Database Error
                  response:
                    type: string
                    example: MongoDB connection failed
